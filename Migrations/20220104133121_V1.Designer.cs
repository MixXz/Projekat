// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(ReceptContext))]
    [Migration("20220104133121_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Instrukcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SastojciID")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VremeZaPripremu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SastojciID")
                        .IsUnique();

                    b.ToTable("Instrukcija");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("Models.Recept", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("InstrukcijaID")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Opis")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("TezinaPripremeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InstrukcijaID")
                        .IsUnique();

                    b.HasIndex("KategorijaID");

                    b.HasIndex("TezinaPripremeID");

                    b.ToTable("Recept");
                });

            modelBuilder.Entity("Models.Sastojci", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GlavniSastojak")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OstaliSastojci")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ID");

                    b.ToTable("Sastojci");
                });

            modelBuilder.Entity("Models.TezinaPripreme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Tezina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TezinaPripreme");
                });

            modelBuilder.Entity("Models.Instrukcija", b =>
                {
                    b.HasOne("Models.Sastojci", "Sastojci")
                        .WithOne("Instrukcija")
                        .HasForeignKey("Models.Instrukcija", "SastojciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sastojci");
                });

            modelBuilder.Entity("Models.Recept", b =>
                {
                    b.HasOne("Models.Instrukcija", "Instrukcija")
                        .WithOne("Recept")
                        .HasForeignKey("Models.Recept", "InstrukcijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Kategorija", "Kategorija")
                        .WithMany("Recepti")
                        .HasForeignKey("KategorijaID");

                    b.HasOne("Models.TezinaPripreme", "TezinaPripreme")
                        .WithMany("Recepti")
                        .HasForeignKey("TezinaPripremeID");

                    b.Navigation("Instrukcija");

                    b.Navigation("Kategorija");

                    b.Navigation("TezinaPripreme");
                });

            modelBuilder.Entity("Models.Instrukcija", b =>
                {
                    b.Navigation("Recept");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Navigation("Recepti");
                });

            modelBuilder.Entity("Models.Sastojci", b =>
                {
                    b.Navigation("Instrukcija");
                });

            modelBuilder.Entity("Models.TezinaPripreme", b =>
                {
                    b.Navigation("Recepti");
                });
#pragma warning restore 612, 618
        }
    }
}
